[tool.poetry]
name = "validators"
version = "0.20.0"
description = "Python Data Validation for Humansâ„¢"
authors = ["Konsta Vesterinen <konsta@fastmonkeys.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/python-validators/validators"
keywords = ["validation", "validator", "python-validator"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = ["CHANGES.md", "docs/*"]

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.2.0"
tox = "^4.4.7"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.3"
mkdocstrings = { extras = ["python"], version = "^0.20.0" }
pyaml = "^21.10.1"

[tool.poetry.group.sast.dependencies]
bandit = "^1.7.5"

[tool.poetry.group.tests.dependencies]
pytest = "^7.2.2"

[tool.poetry.group.type-lint-fmt.dependencies]
black = "^23.1.0"
flake8 = "^5.0.4"
flake8-docstrings = "^1.7.0"
isort = "^5.12.0"
pyright = "^1.1.299"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

################################
# formatters, linters, testers #
################################

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311"]
extend-exclude = "i18n"

[tool.bandit]
exclude_dirs = [".github", ".pytest_cache", ".tox", ".vscode", "site", "tests"]

[tool.isort]
ensure_newline_before_comments = true
extend_skip_glob = ["**/i18n/*"]
force_grid_wrap = 0
force_sort_within_sections = true
ignore_comments = true
include_trailing_comma = true
known_local_folder = ["validators"]
length_sort = true
line_length = 100
multi_line_output = 3
profile = "black"
reverse_relative = true
reverse_sort = true
skip_gitignore = true
use_parentheses = true

[tool.pyright]
include = ["validators", "tests"]
exclude = ["**/__pycache__", ".pytest_cache/", ".tox/", "site/", "**/i18n/*"]
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "strict"

[tool.tox]
legacy_tox_ini = """
    [tox]
    requires =
        tox >= 4.0
    env_list = py{38,39,310,311}
        fmt_black, fmt_isort, lint, type

    [testenv]
    description = run unit tests
    deps = pytest
    commands = pytest

    [testenv:fmt_black]
    description = run formatter
    deps = black
    commands = black .

    [testenv:fmt_isort]
    description = run formatter
    deps = isort
    commands = isort .

    [testenv:lint]
    description = run linters
    deps = flake8
    commands = flake8

    [testenv:type]
    description = run type checker
    deps =
        pyright
        pytest
    commands = pyright
"""
